package com.themangoproject.ui;

import com.themangoproject.model.MangoController;
import com.themangoproject.model.Movie;
import com.themangoproject.ui.model.EditableMovieTableModel;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.JFileChooser;


/**
 * The BottomBar is the panel along the bottom of the program that has action
 * buttons and a status label in the middle of the panel.
 * 
 * @author  Kyle Ronning, Paul Osborne, Zach Varberg
 */
public class BottomBar extends javax.swing.JPanel {

    /** Creates new form BottomBar */
    public BottomBar() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusLabel = new javax.swing.JLabel();
        addMovieButton = new javax.swing.JButton();
        editMovieButton = new javax.swing.JButton();
        addListSetButton = new javax.swing.JButton();
        createSavedSearchButton = new javax.swing.JButton();
        showHideButton = new javax.swing.JButton();
        associateImageButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        addMovieButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/movieadd.png"))); // NOI18N
        addMovieButton.setToolTipText("Add New Movie");
        addMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovieButtonActionPerformed(evt);
            }
        });

        editMovieButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/movieedit.png"))); // NOI18N
        editMovieButton.setToolTipText("Edit Selected Movie");
        editMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMovieButtonActionPerformed(evt);
            }
        });

        addListSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/setlistadd.png"))); // NOI18N
        addListSetButton.setToolTipText("Create Set/List");
        addListSetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addListSetButtonActionPerformed(evt);
            }
        });

        createSavedSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/advancedsearch.png"))); // NOI18N
        createSavedSearchButton.setToolTipText("Create Saved Search");
        createSavedSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createSavedSearchButtonActionPerformed(evt);
            }
        });

        showHideButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/arrow_down.png"))); // NOI18N
        showHideButton.setToolTipText("Show/Hide Info Panel");
        showHideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showHideButtonActionPerformed(evt);
            }
        });

        associateImageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/picture_add.png"))); // NOI18N
        associateImageButton.setToolTipText("Upload Thumbnail Image");
        associateImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                associateImageButtonActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/user.png"))); // NOI18N
        jButton1.setToolTipText("Set Owner");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addMovieButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editMovieButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addListSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createSavedSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(showHideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(associateImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addListSetButton, addMovieButton, associateImageButton, createSavedSearchButton, editMovieButton, showHideButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(associateImageButton, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(editMovieButton, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(addMovieButton, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(addListSetButton, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(createSavedSearchButton, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(showHideButton, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addListSetButton, addMovieButton, associateImageButton, createSavedSearchButton, editMovieButton, jButton1, showHideButton, statusLabel});

    }// </editor-fold>//GEN-END:initComponents

private void addMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovieButtonActionPerformed
    // Create a new movie dialog
    MovieAddEditDialog maed = 
            new MovieAddEditDialog((Mango)this.getTopLevelAncestor(), true);
    maed.setLocationRelativeTo((Mango)this.getTopLevelAncestor());
    maed.setVisible(true);
}//GEN-LAST:event_addMovieButtonActionPerformed

private void editMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMovieButtonActionPerformed
    // Creates a movie dialog and populates it with movie information for the
    // movie selected in table.
    try{
        MovieAddEditDialog maed = 
                new MovieAddEditDialog((Mango)this.getTopLevelAncestor(), true);
        maed.setLocationRelativeTo((Mango)this.getTopLevelAncestor());

        JTable table = UIController.getInstance().getViewTable();
        int selRow = table.getRowSorter().convertRowIndexToModel(table.getSelectedRow());
        Movie m = ((EditableMovieTableModel)table.getModel()).getMovieFromRow(selRow);
        maed.populateData(m);
        // Add code to gather information about a movie given the cell that is
        // selected in the table

        maed.setVisible(true);
    } catch (IndexOutOfBoundsException e){
        JOptionPane.showMessageDialog(UIController.getInstance().getMango(),
                "Please select a movie first", "Invalid Selection",
                JOptionPane.WARNING_MESSAGE);
    }
}//GEN-LAST:event_editMovieButtonActionPerformed

private void addListSetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addListSetButtonActionPerformed
    // Show dialog to create a new set or list
    SetListDialog sld =
            new SetListDialog((Mango)this.getTopLevelAncestor(), true);
    sld.setLocationRelativeTo((Mango)this.getTopLevelAncestor());
    sld.setVisible(true);
}//GEN-LAST:event_addListSetButtonActionPerformed

private void createSavedSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createSavedSearchButtonActionPerformed
    // Show dialog to create a saved search
    SavedSearchDialog ssd = 
            new SavedSearchDialog((Mango)this.getTopLevelAncestor(), true);
    ssd.setLocationRelativeTo((Mango)this.getTopLevelAncestor());
    ssd.setVisible(true);
}//GEN-LAST:event_createSavedSearchButtonActionPerformed

private void showHideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showHideButtonActionPerformed
    // Hide or show the InfoPanel
    ((Mango)this.getTopLevelAncestor()).toggleInfoPanel();
}//GEN-LAST:event_showHideButtonActionPerformed

private void associateImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_associateImageButtonActionPerformed
    // Create a new upload thumbnail dialog
    JFileChooser jfc = new JFileChooser();
    jfc.addChoosableFileFilter(new ImageFilter());
    jfc.setAcceptAllFileFilterUsed(false);
    int i = jfc.showOpenDialog(this);
    File file = null;
    
    if(i == JFileChooser.APPROVE_OPTION){
        Image image = null;
        InputStream is = null;
        try {
            
            file = jfc.getSelectedFile();
            
            image = ImageIO.read(file);
            if(image != null){
               image = image.getScaledInstance(160, 160, Image.SCALE_DEFAULT);
               
               BufferedImage im = Pictures.toBufferedImage(image);
               file = new File("temp.jpg");
               ImageIO.write(im, "jpg", file);
               
                is = new FileInputStream(file);
            } else {
                JOptionPane.showMessageDialog(associateImageButton, "Error uploading picture:\nIncorrect file type.");
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(associateImageButton, "Error uploading picture");
            Logger.getLogger(BottomBar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(associateImageButton, "Error uploading picture");
            Logger.getLogger(BottomBar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JTable table = UIController.getInstance().getViewTable();
        int modelIndex = table.getRowSorter().convertRowIndexToModel(table.getSelectedRow());
        Movie m = ((EditableMovieTableModel)table.getModel()).getMovieForRow(modelIndex); 
        
//        JTable table = UIController.getInstance().getViewTable();
//        int selRow = table.getRowSorter().convertRowIndexToModel(table.getSelectedRow());
//        Movie m = ((EditableMovieTableModel)UIController.getInstance().getViewTable().getModel()).getMovieFromRow(selRow);
        
        MangoController.getInstance().setImageForMovie(m,is);
//        table.getRowSorter().
        //TODO:  Not the best way to do this, but it works.
//        UIController.getInstance().getViewTable().clearSelection();
//        UIController.getInstance().getViewTable().setRowSelectionInterval(selRow, selRow);

    }

}//GEN-LAST:event_associateImageButtonActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // Set the owner
    SetOwnerDialog sod = new SetOwnerDialog(UIController.getInstance().getMango(), true);
    sod.setLocationRelativeTo(UIController.getInstance().getMango());
    sod.setVisible(true);
}//GEN-LAST:event_jButton1ActionPerformed




/**
 * Sets the icon to the appropriate arrow.  Up arrow if the InfoPanel is hidden.
 * Down arrow if the InfoPanel is showing.
 * 
 * @param i The icon to display.
 */
public void setInfoIcon(int i) {
    if (i == 0)
        this.showHideButton.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/com/themangoproject/ui/images/arrow_up.png")));
    else if (i == 1)
        this.showHideButton.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/com/themangoproject/ui/images/arrow_down.png")));
}

/**
 * Sets the label to show current status information. I.e. # of movies.
 * 
 * @param label The text to show in the label for status information.
 */
public void setLabelInfo(String label) {
    this.statusLabel.setText(label);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addListSetButton;
    private javax.swing.JButton addMovieButton;
    private javax.swing.JButton associateImageButton;
    private javax.swing.JButton createSavedSearchButton;
    private javax.swing.JButton editMovieButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton showHideButton;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables

}
