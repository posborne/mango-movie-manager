/*
 * ViewPanel.java
 *
 * Created on November 8, 2008, 3:34 PM
 */

package com.themangoproject.ui;

import java.awt.Color;
import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.JTable.PrintMode;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import com.themangoproject.model.MangoController;
import com.themangoproject.model.Movie;
import com.themangoproject.ui.model.AllMoviesEditableTableModel;
import com.themangoproject.ui.model.EditableMovieTableModel;
import javax.swing.RowFilter;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import javax.swing.table.TableRowSorter;

/**
 * ViewPanel is the main panel of the Mango program.  There are action buttons
 * that allow the user to change the main panel view from thumbnail to list 
 * view, search text within the main panel and launch an advanced search option.  
 * 
 * @author  Kyle Ronning, Paul Osborne
 * @version 1.0
 */
public class ViewPanel extends javax.swing.JPanel implements TableModelListener {

    /** Creates new form ViewPanel */
    public ViewPanel() {
        initComponents();
        initColumnSizes();
        
        // setup row sorter and filter
        TableRowSorter rowSorter = new TableRowSorter<TableModel>(viewTable.getModel());
        viewTable.setRowSorter(rowSorter);
    }

    /**
     * Initialize column sizes to be reasonable.
     */
    private void initColumnSizes() {
        if (viewTable.getColumnModel().getColumnCount() > 0) {
            TableColumnModel tcm = viewTable.getColumnModel();
            // Number Column
            tcm.getColumn(0).setPreferredWidth(30);
            tcm.getColumn(0).setMaxWidth(50);
            // Rating Column
            tcm.getColumn(3).setPreferredWidth(45);
            tcm.getColumn(3).setMaxWidth(70);
            // Year column
            tcm.getColumn(4).setPreferredWidth(50);
            tcm.getColumn(4).setMaxWidth(70);
            // Mango Rating
            tcm.getColumn(5).setPreferredWidth(40);
            tcm.getColumn(5).setMaxWidth(90);
            // Type 
            tcm.getColumn(6).setPreferredWidth(80);
            tcm.getColumn(6).setMaxWidth(100);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlsPanel = new javax.swing.JPanel();
        searchTF = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        tableScrollPane = new javax.swing.JScrollPane();
        viewTable = new javax.swing.JTable();

        searchTF.setForeground(new java.awt.Color(140, 140, 140));
        searchTF.setText("Search");
        searchTF.setMargin(new java.awt.Insets(2, 4, 2, 2));
        searchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTFFocusLost(evt);
            }
        });
        searchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTFKeyReleased(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/search.png"))); // NOI18N
        searchButton.setToolTipText("Search");
        searchButton.setBorder(null);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        printButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/themangoproject/ui/images/printer.png"))); // NOI18N
        printButton.setToolTipText("Print Table");
        printButton.setBorder(null);

        javax.swing.GroupLayout controlsPanelLayout = new javax.swing.GroupLayout(controlsPanel);
        controlsPanel.setLayout(controlsPanelLayout);
        controlsPanelLayout.setHorizontalGroup(
            controlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(printButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE)
                .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        controlsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {printButton, searchButton});

        controlsPanelLayout.setVerticalGroup(
            controlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(printButton))
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addContainerGap())
        );

        controlsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {printButton, searchButton, searchTF});

        tableScrollPane.setBorder(null);
        tableScrollPane.setMinimumSize(new java.awt.Dimension(0, 0));

        viewTable.setModel(new AllMoviesEditableTableModel());
        viewTable.setMaximumSize(new java.awt.Dimension(32767, 32767));
        tableScrollPane.setViewportView(viewTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(controlsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
    String filterText = searchTF.getText();
    TableRowSorter trs = (TableRowSorter) viewTable.getRowSorter();
    trs.setRowFilter(RowFilter.regexFilter(filterText));    
}//GEN-LAST:event_searchButtonActionPerformed

private void searchTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTFFocusGained
    // If text was previously added to the text field nothing happens.  If
    // The text is gray colored it will say "Search" and will be replaced
    // with black text and an empty string
    if (this.searchTF.getForeground().equals(new Color(140, 140, 140))) {
        this.searchTF.setForeground(new Color(0, 0, 0));
        this.searchTF.setText("");
    }
}//GEN-LAST:event_searchTFFocusGained

private void searchTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTFFocusLost
    // Sets the text to read "Search" in gray color when focus is lost if 
    // the text field contains no text
    if (this.searchTF.getText().equals("")) {
        this.searchTF.setForeground(new Color(140, 140, 140));
        this.searchTF.setText("Search");
    }
}//GEN-LAST:event_searchTFFocusLost

private void searchTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTFKeyReleased
    // Searches for the given string of text within the table
    
    // Set row sorter of TableRowSorter 
    
}//GEN-LAST:event_searchTFKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JButton printButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTF;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JTable viewTable;
    // End of variables declaration//GEN-END:variables

    
    
    /**
     * Set the table model to the specified model.  When changing the table
     * model through this method any listeners that are out of date will be
     * removed from the current table and table models, making it so there
     * isn't memory being lost as a result of listeners referencing items that
     * will not be used again.
     * 
     * @param model The new table model.
     */
    public void setTableModel(TableModel model) {
    	viewTable.clearSelection();
    	if (!(viewTable.getModel() instanceof DefaultTableModel)) {
			int rows = this.viewTable.getModel().getRowCount();
			for (int i = 0; i < rows; i++) {
				Movie m = ((EditableMovieTableModel)viewTable.getModel()).getMovieForRow(i);
				m.removeAllChangeListeners();
				// remove change listener on movies
				MangoController.getInstance()
					.removeMoviesChangeListener(
							((EditableMovieTableModel)this.viewTable.getModel())
								.getMoviesChangeListener());
			}
    	}
		this.viewTable.setModel(model);
        
    }
    
    /**
     * Get the view table
     * 
     * @return a reference to the view table.
     */
    public JTable getTable() {
    	return this.viewTable;
    }

    public void tableChanged(TableModelEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
        
//        int row = e.getFirstRow();
//        int column = e.getColumn();
//        TableModel model = (TableModel)e.getSource();
//        String columnName = model.getColumnName(column);
//        Object data = model.getValueAt(row, column);
    }
    
    
}
